apiVersion: v1
kind: Service
metadata:
  name: reviews
spec:
  selector:
    app: reviews
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/service-meta-version: "v1"
        prometheus.io/scrape: "true"
        prometheus.io/port: "20200"
    spec:
      serviceAccountName: reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        - name: conf
          mountPath: /opt/ibm/wlp/usr/servers/defaultServer/server.xml
          subPath: server.xml
        resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: conf
        configMap:
          name: reviews
          items:
          - key: server.xml
            path: server.xml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/service-meta-version": "v2"
        "consul.hashicorp.com/connect-service-upstreams": "ratings:9080"
    spec:
      serviceAccountName: reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: RATINGS_HOSTNAME
          value: "127.0.0.1"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        - name: conf
          mountPath: /opt/ibm/wlp/usr/servers/defaultServer/server.xml
          subPath: server.xml
        resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: conf
        configMap:
          name: reviews
          items:
          - key: server.xml
            path: server.xml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/service-meta-version": "v3"
        "consul.hashicorp.com/connect-service-upstreams": "ratings:9080"
    spec:
      serviceAccountName: reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: RATINGS_HOSTNAME
          value: "127.0.0.1"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        - name: conf
          mountPath: /opt/ibm/wlp/usr/servers/defaultServer/server.xml
          subPath: server.xml
        resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: conf
        configMap:
          name: reviews
          items:
          - key: server.xml
            path: server.xml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reviews
data:
  server.xml: |
              <!-- Copyright (c) 2017 Istio Authors

                Licensed under the Apache License, Version 2.0 (the "License");
                you may not use this file except in compliance with the License.
                You may obtain a copy of the License at

                  http://www.apache.org/licenses/LICENSE-2.0

                Unless required by applicable law or agreed to in writing, software
                distributed under the License is distributed on an "AS IS" BASIS,
                WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                See the License for the specific language governing permissions and
                limitations under the License.-->
              <server description="Sample Liberty server">

                  <featureManager>
                      <feature>jaxrs-2.0</feature>
                      <feature>jsonp-1.0</feature>
                  </featureManager>

                  <httpEndpoint host="*" httpPort="9090" httpsPort="-1"
                                id="defaultHttpEndpoint"/>

                  <webContainer deferServletLoad="false"/>
                  <applicationMonitor dropinsEnabled="false" updateTrigger="mbean"/>
                  <config updateTrigger="mbean"/>


                  <executor coreThreads="5"/>

                  <webApplication contextRoot="/" id="reviews-app" location="reviews-application-1.0.war" name="reviews-app"/>

              </server>